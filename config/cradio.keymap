/*

    Configuration created by: NÃ©meth Samu
    Based on: https://github.com/benvallack/zmk-config/blob/84ae125986b18e1e6dfb1f2a6a15777429f29520/config/cradio.keymap

*/

#define ZMK_POINTING_DEFAULT_MOVE_VAL 600 // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20  // 10

#include <behaviors.dtsi>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/outputs.h>

/*

    Ordering of switches on the left side.
    The input gpio numbers have to be in this order.

        0   1   2   3   4     21  20  19  18  17    
        5   6   7   8   9     26  25  24  23  22    
        10  11  12  13  14    31  30  29  28  27    
                    15  16    33  32    

*/

// Adjusted pin arrangement.
&kscan0 {
    input-gpios
    = <&pro_micro  1 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  2 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 21 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 20 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 19 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  5 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 18 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 16 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    ;
};

// Mod tap tuning.
&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

// Mouse control tuning.
&mmv {
  acceleration-exponent = <1>;          // 1
  time-to-max-speed-ms = <500>;         // 300
  delay-ms = <0>;                       // 0
};

&msc {
  acceleration-exponent = <0>;          // 0
  time-to-max-speed-ms = <300>;         // 300
  delay-ms = <0>;                       // 0
};

// Sticky key tuning
&sk {
    release-after-ms = <3000>;
};

/ {

    macros {
        bt_clear_0: bt_clear_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &bt BT_SEL 0>
                , <&macro_tap &bt BT_CLR>
                ;
        };
        bt_clear_1: bt_clear_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &bt BT_SEL 1>
                , <&macro_tap &bt BT_CLR>
                ;
        };
        bt_clear_2: bt_clear_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &bt BT_SEL 2>
                , <&macro_tap &bt BT_CLR>
                ;
        };
    };

    behaviors {

        sm_com_ques: sm_comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "sm_comma_question";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sm_dot_excl: sm_dot_exclamation {
            compatible = "zmk,behavior-mod-morph";
            label = "sm_dot_exclamation";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCLAMATION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        sm_f1_f7: shift_morph_f1_f7 {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_f1_f7";
            #binding-cells = <0>;
            bindings = <&kp F1>, <&kp F7>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sm_f2_f8: shift_morph_f2_f8 {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_f2_f8";
            #binding-cells = <0>;
            bindings = <&kp F2>, <&kp F8>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sm_f3_f9: shift_morph_f3_f9 {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_f3_f9";
            #binding-cells = <0>;
            bindings = <&kp F3>, <&kp F9>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sm_f4_f10: shift_morph_f4_f10 {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_f4_f10";
            #binding-cells = <0>;
            bindings = <&kp F4>, <&kp F10>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sm_f5_f11: shift_morph_f5_f11 {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_f5_f11";
            #binding-cells = <0>;
            bindings = <&kp F5>, <&kp F11>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sm_f6_f12: shift_morph_f6_f12 {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_f6_f12";
            #binding-cells = <0>;
            bindings = <&kp F6>, <&kp F12>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        sm_next_prev: shift_morph_next_prev {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_next_prev";
            #binding-cells = <0>;
            bindings = <&kp C_NEXT>, <&kp C_PREV>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sm_volup_voldown: shift_morph_volup_voldown {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_volup_voldown";
            #binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        sm_bt_0: shift_morph_bt_0 {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_volup_voldown";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0>, <&bt_clear_0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sm_bt_1: shift_morph_bt_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_volup_voldown";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1>, <&bt_clear_1>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sm_bt_2: shift_morph_bt_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_volup_voldown";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2>, <&bt_clear_2>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_shift_control_caps {
            timeout-ms = <50>;
            bindings = <&caps_word>;
            key-positions = <31 32>;
            layers = <0>;
        };
    };

    // Keymap layer definitions.
    keymap {
        compatible = "zmk,keymap";
        default_layer { // Layer 0
            bindings = <

&kp SQT  &sm_com_ques &sm_dot_excl &kp P      &kp Y     &kp F     &kp G &kp C &kp R &kp L
&kp A    &kp O        &kp E        &kp U      &kp I     &kp D     &kp H &kp T &kp N &kp S
&kp SEMI &kp Q        &kp J        &kp K      &kp X     &kp B     &kp M &kp W &kp V &kp Z
                      &mo 1        &kp LSHIFT &kp RCTRL &kp SPACE

            >;
        };

        symbol_layer { // Layer 1
            bindings = <

&kp TAB    &kp GRAVE   &kp HASH      &kp DLLR       &kp PRCNT   &kp LESS_THAN &kp LPAR &kp RPAR &kp GREATER_THAN &kp ENTER
&kp ESC    &kp BSLH    &sk LALT      &sk LGUI       &kp SLASH   &kp LEFT      &kp DOWN &kp UP   &kp RIGHT        &kp BACKSPACE
&kp DELETE &kp AT_SIGN &kp AMPERSAND &kp UNDERSCORE &kp PIPE    &kp LBKT      &kp LBRC &kp RBRC &kp RBKT         &kp MINUS
                                     &trans         &bootloader &sk RCTRL     &mo 2

            >;
        };

        number_layer { // Layer 2
            bindings = <

&sm_bt_0  &sm_bt_1  &sm_bt_2           &out OUT_TOG &sm_next_prev     &kp CARET    &kp N7 &kp N8 &kp N9 &kp EQUAL
&sm_f1_f7 &kp C_PP  &kp LC(LA(LS(F8))) &kp LGUI     &sm_volup_voldown &kp ASTERISK &kp N4 &kp N5 &kp N6 &kp PLUS
&sm_f2_f8 &sm_f3_f9 &sm_f4_f10         &sm_f5_f11   &sm_f6_f12        &kp N0       &kp N1 &kp N2 &kp N3 &kp TILDE
                                       &mo 3        &kp LSHIFT        &bootloader  &trans

            >;
        };

        nav_layer { // Layer 3
            bindings = <

&none &none &none &none  &none          &msc SCRL_LEFT &msc SCRL_DOWN &msc SCRL_UP &msc SCRL_RIGHT &none
&none &none &none &none  &none          &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &mkp RCLK
&none &none &none &none  &none          &none          &none          &none        &none           &none
                  &trans &studio_unlock &mkp LCLK      &none

            >;
        };  
    };
};