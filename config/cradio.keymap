/*

    Configuration created by: NÃ©meth Samu
    Based on: https://github.com/benvallack/zmk-config/blob/84ae125986b18e1e6dfb1f2a6a15777429f29520/config/cradio.keymap

*/

#define ZMK_POINTING_DEFAULT_MOVE_VAL 600 // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20  // 10

#include <behaviors.dtsi>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

/*

    Ordering of switches on the left side.
    The input gpio numbers have to be in this order.

        0   1   2   3   4     21  20  19  18  17    
        5   6   7   8   9     26  25  24  23  22    
        10  11  12  13  14    31  30  29  28  27    
                    15  16    33  32    

*/

// Adjusted pin arrangement.
&kscan0 {
    input-gpios
    = <&pro_micro  1 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  2 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 21 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 20 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 19 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  5 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 18 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 16 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    ;
};

// Mod tap tuning.
&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

// Mouse control tuning.
&mmv {
  acceleration-exponent = <1>;          // 1
  time-to-max-speed-ms = <500>;         // 300
  delay-ms = <0>;                       // 0
};

&msc {
  acceleration-exponent = <0>;          // 0
  time-to-max-speed-ms = <300>;         // 300
  delay-ms = <0>;                       // 0
};

/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mods";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "tapdance";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        ls: layer_tap_hold {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&to>;
            display-name = "Layer-Tap";
        };

        sm_com_ques: sm_comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "sm_comma_question";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sm_dot_excl: sm_dot_exclamation {
            compatible = "zmk,behavior-mod-morph";
            label = "sm_dot_exclamation";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCLAMATION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        sm_f1_f7: shift_morph_f1_f7 {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_f1_f7";
            #binding-cells = <0>;
            bindings = <&kp F1>, <&kp F7>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sm_f2_f8: shift_morph_f2_f8 {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_f2_f8";
            #binding-cells = <0>;
            bindings = <&kp F2>, <&kp F8>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sm_f3_f9: shift_morph_f3_f9 {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_f3_f9";
            #binding-cells = <0>;
            bindings = <&kp F3>, <&kp F9>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sm_f4_f10: shift_morph_f4_f10 {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_f4_f10";
            #binding-cells = <0>;
            bindings = <&kp F4>, <&kp F10>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sm_f5_f11: shift_morph_f5_f11 {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_f5_f11";
            #binding-cells = <0>;
            bindings = <&kp F5>, <&kp F11>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sm_f6_f12: shift_morph_f6_f12 {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_morph_f6_f12";
            #binding-cells = <0>;
            bindings = <&kp F6>, <&kp F12>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_shift_control_caps {
            timeout-ms = <50>;
            bindings = <&caps_word>;
            key-positions = <31 32>;
            layers = <0>;
        };
    };

    // Keymap layer definitions.
    keymap {
        compatible = "zmk,keymap";
        default_layer { // Layer 0
            bindings = <

&kp SQT  &sm_com_ques &sm_dot_excl &kp P      &kp Y     &kp F     &kp G &kp C &kp R &kp L
&kp A    &kp O        &kp E        &kp U      &kp I     &kp D     &kp H &kp T &kp N &kp S
&kp SEMI &kp Q        &kp J        &kp K      &kp X     &kp B     &kp M &kp W &kp V &kp Z
                      &ls 1 1      &kp LSHIFT &kp RCTRL &kp SPACE

            >;
        };

        symbol_layer { // Layer 1
            bindings = <

&kp TAB    &kp GRAVE      &kp HASH     &kp DLLR      &kp PRCNT  &kp BSLH  &kp LESS_THAN &kp GREATER_THAN &kp SLASH &kp ENTER
&kp ESC    &kp UNDERSCORE &kp ASTERISK &kp EQUAL     &kp TILDE  &kp CARET &kp LPAR      &kp RPAR         &kp MINUS &kp BACKSPACE
&kp DELETE &kp PLUS       &kp AT_SIGN  &kp AMPERSAND &kp PIPE   &kp LBKT  &kp LBRC      &kp RBRC         &kp RBKT  &ls 3 3
                                       &ls 2 2       &kp LSHIFT &kp RCTRL &to 0

            >;
        };

        number_layer { // Layer 2
            bindings = <

&kp C_PREV &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP &kp C_PP   &none     &kp N7 &kp N8 &kp N9 &kp ENTER
&none      &none      &none        &none        &sm_f6_f12 &none     &kp N4 &kp N5 &kp N6 &kp BACKSPACE
&sm_f1_f7  &sm_f2_f8  &sm_f3_f9    &sm_f4_f10   &sm_f5_f11 &kp N0    &kp N1 &kp N2 &kp N3 &ls 3 3
                                   &ls 1 1      &kp LSHIFT &kp RCTRL &to 0

            >;
        };

        nav_layer { // Layer 3
            bindings = <

&kp TAB   &msc SCRL_LEFT   &mmv MOVE_UP   &msc SCRL_RIGHT &msc SCRL_UP   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &kp ENTER
&kp ESC   &mmv MOVE_LEFT   &mmv MOVE_DOWN &mmv MOVE_RIGHT &msc SCRL_DOWN &kp LEFT   &kp DOWN     &kp UP       &kp RIGHT    &kp BACKSPACE
&mkp RCLK &studio_unlock   &bootloader    &none           &sys_reset     &sys_reset &none        &bootloader  &none         &none
                                          &ls 1 1         &mkp LCLK      &none      &to 0

            >;
        };
    };
};